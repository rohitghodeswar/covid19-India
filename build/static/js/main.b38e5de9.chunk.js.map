{"version":3,"sources":["routes/CovidRouteComponent.js","components/CovidNavigationComponent.js","App.js","reducer/covid-reducer.js","reducer/covid-zone-reducer.js","reducer/covid-state-wise-reducer.js","reducer/covid-resource-reducer.js","reducer/covid-loading-reducer.js","reducer/covid-log-reducer.js","reducer/root-reducer.js","store/index.js","index.js","constants/action-types.js"],"names":["CovidDistrictComponet","lazy","CovidStateComponent","CovidIndiaComponent","Loading","React","memo","Fragment","Suspense","fallback","exact","path","component","useStyles","makeStyles","theme","root","width","margin","backgroundColor","palette","background","paper","appBar","maxHeight","marginBottom","CovidNavigationComponent","classes","useState","value","setValue","AppBar","position","color","className","BottomNavigation","showLabels","onChange","event","newValue","BottomNavigationAction","Link","to","label","icon","flexGrow","maxWidth","title","textAlign","rootPaper","boxShadow","padding","search","borderRadius","shape","fade","common","white","marginLeft","breakpoints","up","spacing","App","dispatch","useDispatch","createMuiTheme","type","useEffect","fetchData","latitude","longitude","a","long","url","axios","get","response","data","components","results","country","getGeoInfo","location","state","district","city","state_district","state_code","payload","then","country_name","region","region_code","catch","error","console","log","navigator","geolocation","getCurrentPosition","pos","coords","alert","ThemeProvider","Paper","Grid","container","item","xs","Toolbar","Typography","variant","noWrap","initialState","districtList","covidReducer","action","GET_CURRENT_LOCATION","GET_COVID_DATA_REQUEST","GET_COVID_DATA_SUCCESS","covidData","zones","covidZoneReducer","GET_COVID_ZONE_REQUEST","GET_COVID_ZONE_SUCCESS","stateWise","covidStateWiseReducer","GET_COVID_STATEWISE_REQUEST","GET_COVID_STATEWISE_SUCCESS","statewise","tested","stateWiseData","testData","covidResourceReducer","GET_COVID_RESOURCE_REQUEST","GET_COVID_RESOURCE_SUCCESS","resources","isLoading","covidLoadingReducer","GET_COVID_LOADING_REQUEST","GET_COVID_LOADING_SUCCESS","logData","covidLogReducer","GET_COVID_LOG_REQUEST","GET_COVID_LOG_SUCCESS","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b38e5de9.chunk.js","sourcesContent":["import React, { lazy } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst CovidDistrictComponet = lazy(() =>\r\n  import(\"./../pages/CovidDistrictComponet\")\r\n);\r\nconst CovidStateComponent = lazy(() =>\r\n  import(\"./../pages/CovidStateComponent\")\r\n);\r\nconst CovidIndiaComponent = lazy(() =>\r\n  import(\"./../pages/CovidIndiaComponent\")\r\n);\r\n\r\nconst Loading = () => {\r\n  return \"\";\r\n};\r\n\r\nconst CovidRouteComponent = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Switch>\r\n        <React.Suspense fallback={<Loading />}>\r\n          <Route exact path=\"/\" component={CovidDistrictComponet} />\r\n          <Route path=\"/states\" component={CovidStateComponent} />\r\n          <Route path=\"/india\" component={CovidIndiaComponent} />\r\n        </React.Suspense>\r\n      </Switch>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default React.memo(CovidRouteComponent);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\n\r\n//icons\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport AllOutIcon from \"@material-ui/icons/AllOut\";\r\nimport PublicIcon from \"@material-ui/icons/Public\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n    // maxWidth: 560,\r\n    margin: \"0 auto\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  appBar: {\r\n    maxHeight: \"70px\",\r\n    marginBottom: \"10px\",\r\n  },\r\n}));\r\n\r\nconst CovidNavigationComponent = () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(\"districts\");\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n      <AppBar position=\"sticky\" color=\"inherit\" className={classes.appBar}>\r\n        <BottomNavigation\r\n          showLabels\r\n          value={value}\r\n          onChange={handleChange}\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            component={Link}\r\n            to=\"/\"\r\n            value=\"districts\"\r\n            label=\"Districts\"\r\n            icon={<LocationCityIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            component={Link}\r\n            to=\"/states\"\r\n            value=\"states\"\r\n            label=\"States\"\r\n            icon={<AllOutIcon />}\r\n          />\r\n          <BottomNavigationAction\r\n            component={Link}\r\n            to=\"/india\"\r\n            label=\"India\"\r\n            value=\"india\"\r\n            icon={<PublicIcon />}\r\n          />\r\n        </BottomNavigation>\r\n      </AppBar>\r\n  );\r\n};\r\n\r\nexport default CovidNavigationComponent;\r\n","import React, { useEffect } from \"react\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles, fade } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n// import Switch from \"@material-ui/core/Switch\";\r\n\r\n// components\r\nimport CovidRouteComponent from \"./routes/CovidRouteComponent\";\r\nimport CovidNavigationComponent from \"./components/CovidNavigationComponent\";\r\n\r\n//utils\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: \"640px\",\r\n    margin: \"0 auto\",\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\"\r\n  },\r\n  rootPaper: {\r\n    boxShadow: \"none\",\r\n    padding: \"5px\",\r\n  },\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: fade(theme.palette.common.white, 0.15),\r\n    \"&:hover\": {\r\n      backgroundColor: fade(theme.palette.common.white, 0.25),\r\n    },\r\n    marginLeft: 0,\r\n    // width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      marginLeft: theme.spacing(1),\r\n      width: \"auto\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst App = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // const [darkState, setDarkState] = useState(false);\r\n\r\n  // const palletType = darkState ? \"dark\" : \"light\";\r\n  const palletType = \"light\";\r\n\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: palletType,\r\n    },\r\n  });\r\n\r\n  // const handleThemeChange = () => {\r\n  //   setDarkState(!darkState);\r\n  // };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async (latitude, longitude) => {\r\n      dispatch({\r\n        type: \"GET_COVID_LOADING_REQUEST\",\r\n      });\r\n\r\n      const lat = latitude;\r\n      const long = longitude;\r\n      const url = `https://api.opencagedata.com/geocode/v1/json?q=${lat},${long}&key=63a872e5fe20495c9ee636dbd2207aff`;\r\n      const response = await axios.get(url);\r\n      if (response.data) {\r\n        const { components } = response.data.results[0];\r\n        if (components.country !== \"India\") {\r\n          getGeoInfo();\r\n        } else {\r\n          const location = [\r\n            {\r\n              state: components.state,\r\n              district: components.city || components.state_district,\r\n              country: components.country,\r\n              state_code: components.state_code,\r\n            },\r\n          ];\r\n          dispatch({\r\n            type: \"GET_CURRENT_LOCATION\",\r\n            payload: location,\r\n          });\r\n          dispatch({\r\n            type: \"GET_COVID_LOADING_SUCCESS\",\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    const success = (pos) => {\r\n      if (pos && pos.coords) {\r\n        const { latitude, longitude } = pos.coords;\r\n        fetchData(latitude, longitude);\r\n      }\r\n    };\r\n\r\n    const getGeoInfo = () => {\r\n      axios\r\n        .get(\"https://ipapi.co/json/\")\r\n        .then((response) => {\r\n          const { country_name, region, region_code, city } = response.data;\r\n          const location = [\r\n            {\r\n              state: region,\r\n              district: city,\r\n              country: country_name,\r\n              state_code: region_code,\r\n            },\r\n          ];\r\n          dispatch({\r\n            type: \"GET_CURRENT_LOCATION\",\r\n            payload: location,\r\n          });\r\n          dispatch({\r\n            type: \"GET_COVID_LOADING_SUCCESS\",\r\n          });\r\n          // fetchData(latitude, longitude);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    const error = () => {\r\n      getGeoInfo();\r\n    };\r\n\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(success, error);\r\n    } else {\r\n      alert(\"Geolocation is not supported by this browser.\");\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Router>\r\n      <ThemeProvider theme={theme}>\r\n        <Paper className={classes.rootPaper}>\r\n          <Grid container className={classes.root}>\r\n            <Grid item xs={12}>\r\n              <AppBar position=\"static\">\r\n                <Toolbar>\r\n                  <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                    COVID-19 INDIA\r\n                  </Typography>\r\n                  {/* <div className={classes.search}>\r\n                    <Switch checked={darkState} onChange={handleThemeChange} />\r\n                  </div> */}\r\n                </Toolbar>\r\n              </AppBar>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <CovidNavigationComponent />\r\n              <CovidRouteComponent />\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n  GET_CURRENT_LOCATION,\r\n  GET_COVID_DATA_REQUEST,\r\n  GET_COVID_DATA_SUCCESS,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  districtList: [],\r\n};\r\n\r\nconst covidReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CURRENT_LOCATION:\r\n      return { ...state, location: action.payload };\r\n    case GET_COVID_DATA_REQUEST:\r\n      return { ...state};\r\n\r\n    case GET_COVID_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        covidData: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidReducer;\r\n","import {\r\n  GET_COVID_ZONE_REQUEST,\r\n  GET_COVID_ZONE_SUCCESS,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  zones: [],\r\n};\r\n\r\nconst covidZoneReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_COVID_ZONE_REQUEST:\r\n      return { ...state };\r\n\r\n    case GET_COVID_ZONE_SUCCESS:\r\n      const { zones } = action.payload;\r\n      return { ...state, zones };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidZoneReducer;\r\n","import {\r\n  GET_COVID_STATEWISE_REQUEST,\r\n  GET_COVID_STATEWISE_SUCCESS,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  stateWise: [],\r\n};\r\n\r\nconst covidStateWiseReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_COVID_STATEWISE_REQUEST:\r\n      return { ...state };\r\n\r\n    case GET_COVID_STATEWISE_SUCCESS:\r\n      const { statewise, tested } = action.payload;\r\n      return { ...state, stateWiseData: statewise, testData: tested };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidStateWiseReducer;\r\n","import {\r\n  GET_COVID_RESOURCE_REQUEST,\r\n  GET_COVID_RESOURCE_SUCCESS,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  districtList: [],\r\n};\r\n\r\nconst covidResourceReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_COVID_RESOURCE_REQUEST:\r\n      return { ...state };\r\n\r\n    case GET_COVID_RESOURCE_SUCCESS:\r\n      const { resources } = action.payload;\r\n      return {\r\n        ...state,\r\n        resources,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidResourceReducer;\r\n","import {\r\n  GET_COVID_LOADING_REQUEST,\r\n  GET_COVID_LOADING_SUCCESS,\r\n} from \"../constants/action-types\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n};\r\n\r\nconst covidLoadingReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_COVID_LOADING_REQUEST:\r\n      return { ...state, isLoading: true };\r\n\r\n    case GET_COVID_LOADING_SUCCESS:\r\n      return { ...state, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default covidLoadingReducer;\r\n","import {\r\n    GET_COVID_LOG_REQUEST,\r\n    GET_COVID_LOG_SUCCESS,\r\n  } from \"../constants/action-types\";\r\n  \r\n  const initialState = {\r\n    logData: []\r\n  };\r\n  \r\n  const covidLogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_COVID_LOG_REQUEST:\r\n        return { ...state };\r\n  \r\n      case GET_COVID_LOG_SUCCESS:\r\n        return { ...state, logData: action.payload };\r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default covidLogReducer;\r\n  ","import { combineReducers } from \"redux\";\r\nimport covidReducer from \"./covid-reducer\";\r\nimport covidZoneReducer from \"./covid-zone-reducer\";\r\nimport covidStateWiseReducer from \"./covid-state-wise-reducer\";\r\nimport covidResourceReducer from \"./covid-resource-reducer\";\r\nimport covidLoadingReducer from \"./covid-loading-reducer\";\r\nimport covidLogReducer from \"./covid-log-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  covidReducer,\r\n  covidZoneReducer,\r\n  covidStateWiseReducer,\r\n  covidResourceReducer,\r\n  covidLoadingReducer,\r\n  covidLogReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducer/root-reducer\";\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// covid LOADER\r\nexport const GET_COVID_LOADING_REQUEST = \"GET_COVID_LOADING_REQUEST\";\r\nexport const GET_COVID_LOADING_SUCCESS = \"GET_COVID_LOADING_SUCCESS\";\r\n\r\n// current location\r\nexport const GET_CURRENT_LOCATION = \"GET_CURRENT_LOCATION\";\r\n\r\n// covid constants\r\nexport const GET_COVID_DATA_REQUEST = \"GET_COVID_DATA_REQUEST\";\r\nexport const GET_COVID_DATA_SUCCESS = \"GET_COVID_DATA_SUCCESS\";\r\n\r\n// covid resource\r\nexport const GET_COVID_RESOURCE_REQUEST = \"GET_COVID_RESOURCE_REQUEST\";\r\nexport const GET_COVID_RESOURCE_SUCCESS = \"GET_COVID_RESOURCE_SUCCESS\";\r\n\r\n// covid zones\r\nexport const GET_COVID_ZONE_REQUEST = \"GET_COVID_ZONE_REQUEST\";\r\nexport const GET_COVID_ZONE_SUCCESS = \"GET_COVID_ZONE_SUCCESS\";\r\n\r\n// covid state wise\r\nexport const GET_COVID_STATEWISE_REQUEST = \"GET_COVID_STATEWISE_REQUEST\";\r\nexport const GET_COVID_STATEWISE_SUCCESS = \"GET_COVID_STATEWISE_SUCCESS\";\r\n\r\n// covid log data\r\nexport const GET_COVID_LOG_REQUEST = \"GET_COVID_LOG_REQUEST\";\r\nexport const GET_COVID_LOG_SUCCESS = \"GET_COVID_LOG_SUCCESS\";\r\n\r\n"],"sourceRoot":""}